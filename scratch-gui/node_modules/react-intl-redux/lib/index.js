"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "IntlProvider", {
  enumerable: true,
  get: function get() {
    return _IntlProvider.default;
  }
});
Object.defineProperty(exports, "Provider", {
  enumerable: true,
  get: function get() {
    return _Provider.default;
  }
});
exports.initialState = exports.UPDATE = void 0;
exports.intlReducer = intlReducer;
exports.updateIntl = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _IntlProvider = _interopRequireDefault(require("./components/IntlProvider"));
var _Provider = _interopRequireDefault(require("./components/Provider"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var UPDATE = exports.UPDATE = '@@intl/UPDATE';
var updateIntl = exports.updateIntl = function updateIntl(_ref) {
  var locale = _ref.locale,
    formats = _ref.formats,
    messages = _ref.messages;
  return {
    type: UPDATE,
    payload: {
      locale: locale,
      formats: formats,
      messages: messages
    }
  };
};
var initialState = exports.initialState = {
  locale: 'en',
  messages: {}
};
function intlReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 ? arguments[1] : undefined;
  if (action.type !== UPDATE) {
    return state;
  }
  return _objectSpread(_objectSpread({}, state), action.payload);
}